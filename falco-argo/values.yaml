falco:
  image:
    # -- The image pull policy.
    pullPolicy: IfNotPresent
    # -- The image registry to pull from.
    registry: docker.io
    # -- The image repository to pull from
    repository: falcosecurity/falco-no-driver
    # -- The image tag to pull. Overrides the image tag whose default is the chart appVersion.
    tag: ""

  driver:
  enabled: true
  kind: ebpf
  ebpf:
    path: "/usr/src/falco-bpf.o" # Adjust the path if necessary
    hostNetwork: false
    leastPrivileged: false
    bufSizePreset: 4
    dropFailedExit: false
  falcosidekick:
    enabled: true
    webui:
      enabled: true
    config:
      webhook:
        address: http://webhook-falco-eventsource-svc.argo-events.svc.cluster.local:12000/falco
        customHeaders: Source:falco
  fakeEventGenerator:
    enabled: false
  falco:
    rulesFile:
    - /etc/falco/falco_rules.yaml
    - /etc/falco/falco_rules.local.yaml
    - /etc/falco/k8s_audit_rules.yaml
    - /etc/falco/rules.d/custom-rules.yaml
  customRules:
    custom-rules.yaml: |-
      - rule: COOKIE tampering detector
        desc: Detect tampering of super precious cookie recipes
        condition: modify and (evt.arg.oldpath startswith '/usr/share/nginx' or evt.arg.path startswith '/usr/share/nginx')
        output: Cookie recipes tampering detected, secure your cookies,(uid=%user.uid container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag %evt.arg.oldpath)
        priority: EMERGENCY
        tags: [importantrecipesalert
